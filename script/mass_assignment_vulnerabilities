#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/boot'
require 'active_support'

# Find the models that have potential mass assignment problems.
# The method is to scan the controllers for likely mass assignment,
# and then find the corresponding models that *don't* have 
# attr_accessible defined.  Any time that happens, it's a potential problem.

class String
  
  # A regex to match likely cases of mass assignment
  # Examples of matching strings:
  #   "Foo.new( { :bar => 'baz' } )"
  #   "Foo.update_attributes!(params[:foo])"
  MASS_ASSIGNMENT = /(\w+)\.(new|create|update_attributes|build)!*\(/
  
  # Return the strings that represent potential mass assignment problems.
  # The MASS_ASSIGNMENT regex returns, e.g., ['Post', 'new'] because of
  # the grouping methods; we want the first of the two for each match.
  # For example, the call to scan might return
  #   [['Post', 'new'], ['Person', 'create']]
  # We then select the first element of each subarray, returning
  #   ['Post', 'Person']
  def mass_assignment_problems
    scan(MASS_ASSIGNMENT).map { |problem| problem.first }
  end

  # Return true if the string has potential mass assignment code.
  def mass_assignment?
    self =~ MASS_ASSIGNMENT
  end
  
  # Return true if the string defines attr_accessible.
  # Note that 'attr_accessible' must be preceded by nothing other than
  # whitespace; this catches cases where attr_accessible is commented out.
  def attr_accessible?
    self =~ /^\s*attr_accessible/
  end
end

def print_models_without_attr_accessible(controller, line, number)
  line.mass_assignment_problems.each do |problem|
    model = problem.classify
    model_file = "#{RAILS_ROOT}/app/models/#{model}.rb"
    if File.exist?(model_file)
      unless File.open(model_file).read.attr_accessible?
        puts  "  #{model} model:"
        puts  "    #{controller}"
        print "    #{number} #{line}"
      end
    end
  end
end

def find_mass_assignment_problems(controller)
  File.open(controller).each_with_index do |line, number|
    if line.mass_assignment?
      print_models_without_attr_accessible(controller, line, number)
    end
  end
end

controllers = Dir.glob("#{RAILS_ROOT}/app/controllers/*_controller.rb")

puts "Possible mass assignment vulnerabilities:"
controllers.each do |controller|
  find_mass_assignment_problems(controller)
end

